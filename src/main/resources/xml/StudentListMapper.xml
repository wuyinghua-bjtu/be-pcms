<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bepcms.pcms.Dao.StudentListMapper">
  <resultMap id="BaseResultMap" type="com.bepcms.pcms.Entity.StudentList">
    <id column="studentId" jdbcType="CHAR" property="studentid" />
    <result column="studentName" jdbcType="CHAR" property="studentname" />
    <result column="studentSex" jdbcType="CHAR" property="studentsex" />
    <result column="studentAge" jdbcType="INTEGER" property="studentage" />
    <result column="college" jdbcType="CHAR" property="college" />
    <result column="major" jdbcType="CHAR" property="major" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    studentId, studentName, studentSex, studentAge, college, major
  </sql>
  <select id="selectByExample" parameterType="com.bepcms.pcms.Entity.StudentListExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_list
    where studentId = #{studentid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student_list
    where studentId = #{studentid,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.bepcms.pcms.Entity.StudentListExample">
    delete from student_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bepcms.pcms.Entity.StudentList">
    insert into student_list (studentId, studentName, studentSex, 
      studentAge, college, major
      )
    values (#{studentid,jdbcType=CHAR}, #{studentname,jdbcType=CHAR}, #{studentsex,jdbcType=CHAR}, 
      #{studentage,jdbcType=INTEGER}, #{college,jdbcType=CHAR}, #{major,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bepcms.pcms.Entity.StudentList">
    insert into student_list
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        studentId,
      </if>
      <if test="studentname != null">
        studentName,
      </if>
      <if test="studentsex != null">
        studentSex,
      </if>
      <if test="studentage != null">
        studentAge,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="major != null">
        major,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentid != null">
        #{studentid,jdbcType=CHAR},
      </if>
      <if test="studentname != null">
        #{studentname,jdbcType=CHAR},
      </if>
      <if test="studentsex != null">
        #{studentsex,jdbcType=CHAR},
      </if>
      <if test="studentage != null">
        #{studentage,jdbcType=INTEGER},
      </if>
      <if test="college != null">
        #{college,jdbcType=CHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bepcms.pcms.Entity.StudentListExample" resultType="java.lang.Integer">
    select count(*) from student_list
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student_list
    <set>
      <if test="record.studentid != null">
        studentId = #{record.studentid,jdbcType=CHAR},
      </if>
      <if test="record.studentname != null">
        studentName = #{record.studentname,jdbcType=CHAR},
      </if>
      <if test="record.studentsex != null">
        studentSex = #{record.studentsex,jdbcType=CHAR},
      </if>
      <if test="record.studentage != null">
        studentAge = #{record.studentage,jdbcType=INTEGER},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=CHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student_list
    set studentId = #{record.studentid,jdbcType=CHAR},
      studentName = #{record.studentname,jdbcType=CHAR},
      studentSex = #{record.studentsex,jdbcType=CHAR},
      studentAge = #{record.studentage,jdbcType=INTEGER},
      college = #{record.college,jdbcType=CHAR},
      major = #{record.major,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bepcms.pcms.Entity.StudentList">
    update student_list
    <set>
      <if test="studentname != null">
        studentName = #{studentname,jdbcType=CHAR},
      </if>
      <if test="studentsex != null">
        studentSex = #{studentsex,jdbcType=CHAR},
      </if>
      <if test="studentage != null">
        studentAge = #{studentage,jdbcType=INTEGER},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=CHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=CHAR},
      </if>
    </set>
    where studentId = #{studentid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bepcms.pcms.Entity.StudentList">
    update student_list
    set studentName = #{studentname,jdbcType=CHAR},
      studentSex = #{studentsex,jdbcType=CHAR},
      studentAge = #{studentage,jdbcType=INTEGER},
      college = #{college,jdbcType=CHAR},
      major = #{major,jdbcType=CHAR}
    where studentId = #{studentid,jdbcType=CHAR}
  </update>
  <select id="selectAll" resultType="com.bepcms.pcms.Entity.StudentList">
    select * from student_list
  </select>
</mapper>